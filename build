#!/bin/zsh -x

local generator=$1
local toolchain=$2

if [[ "$generator" == "" ]]; then
	echo Please use "./build.sh GENERATOR [TOOLCHAIN]"
	echo Examples:
	echo For GCC and Make: ./build.sh "Unix Makefiles"
	echo For GCC and Ninja: ./build.sh Ninja
	echo For LLVM and Make: ./build.sh "Unix Makefiles" llvm
	echo For LLVM and Ninja: ./build.sh Ninja llvm
fi

local app=
if [[ "$generator" == "Ninja" ]]; then
	app="ninja"
elif [[ "$generator" == "Unix Makefiles" ]]; then
	app="make"
else
	echo State generator.
    exit
fi

local toolchainCmds=
if [[ "$toolchain" == "llvm" ]]; then
	echo Using LLVM
	export CC="clang"
	export CXX="clang++"
	toolchainCmds="-D_CMAKE_TOOLCHAIN_PREFIX=llvm-"
fi

cd "${0%/*}"

# from: https://stackoverflow.com/questions/6481005/how-to-obtain-the-number-of-cpus-cores-in-linux-from-the-command-line
local cores=
[[ $(uname) = 'Darwin' ]] \
    && cores="$(sysctl -n hw.logicalcpu_max)" \
    || cores="$(lscpu -p | egrep -v '^#' | wc -l)"

function build() {
    mkdir -p "$1"
    cd "$1"
    cmake -G "${generator}" .. ${toolchainCmds} || exit
    ${app} -j${cores} || exit
    mkdir -p "../out-lib/$2"
    cp "libHookey.so" "../out-lib/$2/libHookey.so"
    cp "subhook/libsubhook.so" "../out-lib/$2/libsubhook.so"
    cd ..
}

export CFLAGS="$CFLAGS -g"
export CXXFLAGS="$CXXFLAGS -g"

build "builddir-$generator-$toolchain-64" "64"

export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
export CFLAGS="$CFLAGS -m32"
export CXXFLAGS="$CXXFLAGS -m32"
export LDFLAGS="$LDFLAGS -m32"

build "builddir-$generator-$toolchain-32" "32"
